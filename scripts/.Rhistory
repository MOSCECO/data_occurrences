emprise_ameriques[["Stramonita_haemastoma"]]
emprise_ameriques <- sapply(
names(emprise),
\(n) {
sf <- emprise[[n]]
print(n)
if(nrow(sf) > 0) {
b <- c(-130, min(sf$decimalLatitude), -30, max(sf$decimalLatitude))
names(b) <- c("xmin", "ymin", "xmax", "ymax")
st_crop(sf, b)
}
},
USE.NAMES = T,
simplify = F
)
occ <- emprise_ameriques[["Stramonita_haemastoma"]]
occ
occ0 <- occ_sf[[supfam]][["Stramonita_haemastoma"]]
bb <- st_bbox(occ)
ggplot() +
geom_sf(data = wrld_sf %>% st_crop(bb)) +
geom_sf(data = occ, shape = "+", col = "blue") +
labs(
title = unique(occ$scientificName),
subtitle = paste0(
nrow(occ), " occurrences filtrées ",
"(", nrow(occ0), " occurrences initiales)"
)
)
# sélection de l'emprise pour l'Amérique latine
occs <- Reduce(append, occ_sf_reduced)
occs_ameriques <- sapply(
names(emprise),
\(n) {
sf <- emprise[[n]]
print(n)
if(nrow(sf) > 0) {
b <- c(-130, min(sf$decimalLatitude), -30, max(sf$decimalLatitude))
names(b) <- c("xmin", "ymin", "xmax", "ymax")
st_crop(sf, b)
}
},
USE.NAMES = T,
simplify = F
)
# Création du vecteur qui servira à sélectionner les zones pour lesquelles
# on veut une climatologie
am <- do.call(rbind, occs_ameriques)
ggplot() +
geom_sf(data = wrld_sf %>% st_crop(st_bbox(am))) +
geom_sf(data = am, shape = "+", col = "blue")
ggplot() +
geom_sf(data = wrld_sf %>% st_crop(st_bbox(am))) +
# geom_sf(data = am, shape = "+", col = "blue") +
geom_text(data = am, aes(label = scientificName))
ggplot() +
geom_sf(data = wrld_sf %>% st_crop(st_bbox(am))) +
geom_sf(data = am, shape = "+", col = "blue") +
geom_text(data = am, aes(label = scientificName))
ggplot() +
geom_sf(data = wrld_sf %>% st_crop(st_bbox(am))) +
# geom_sf(data = am, shape = "+", col = "blue") +
geom_text(data = am, aes(x = decimalLongitude, y = decimalLatitude,
label = scientificName))
ggplot() +
geom_sf(data = wrld_sf %>% st_crop(st_bbox(am))) +
geom_sf(data = am, shape = "+", col = "blue") +
geom_text(data = am %>% filter(scientificName == "Omalacantha_antillensis"), aes(x = decimalLongitude, y = decimalLatitude,
label = scientificName))
ggplot() +
geom_sf(data = wrld_sf %>% st_crop(st_bbox(am))) +
geom_sf(data = am, shape = "+", col = "blue") +
geom_text(data = am %>% filter(scientificName == "Omalacantha antillensis"), aes(x = decimalLongitude, y = decimalLatitude,
label = scientificName))
ggplot() +
geom_sf(data = wrld_sf %>% st_crop(st_bbox(am))) +
geom_sf(data = am, shape = "+", col = "blue") +
geom_text(data = am %>% filter(scientificName == "Omalacantha interrupta"), aes(x = decimalLongitude, y = decimalLatitude,
label = scientificName))
ggplot() +
geom_sf(data = wrld_sf %>% st_crop(st_bbox(am))) +
geom_sf(data = am, shape = "+", col = "blue") +
geom_text(data = am %>% filter(scientificName == "Omalacantha bicornuta"), aes(x = decimalLongitude, y = decimalLatitude,
label = scientificName))
View(occs_ameriques$Omalacantha_bicornuta)
ggplot() +
geom_sf(data = wrld_sf %>% st_crop(st_bbox(am))) +
geom_sf(data = am, shape = "+", col = "blue") +
geom_text(data = am %>% filter(occurrenceID == "MCZ:IZ:CRU-1931"), aes(x = decimalLongitude, y = decimalLatitude,
label = scientificName))
ggplot() +
geom_sf(data = wrld_sf %>% st_crop(st_bbox(am))) +
geom_sf(data = OCC$Majoidea$Omalacantha_bicornuta, shape = "+", col = "blue")
ggplot() +
geom_sf(data = wrld_sf %>% st_crop(st_bbox(am))) +
geom_sf(data = occ_sf$Majoidea$Omalacantha_bicornuta,
shape = "+", col = "blue")
supfam <- "Majoidea"
names(occ_sf[[supfam]])
sf <- occ_sf[[supfam]][[75]]
n <- names(occ_sf[[supfam]][75])
# sf <- occ_sf[[supfam]][[75]]
# n <- names(occ_sf[[supfam]][75])
print(n)
# intersection avec les polygons érodés
sf$land <- st_intersects(sf, wrld_sf_buffer) %>% lengths()
ggplot() + geom_sf(data = wrld_buff)
ggplot() + geom_sf(data = wrld_sf_buffer)
ggplot() + geom_sf(data = wrld_sf_buffer) +
sf
ggplot() + geom_sf(data = wrld_sf_buffer) + sf
ggplot() + geom_sf(data = wrld_sf_buffer) + geom_sf(data = sf, shape = "+", col = "blue")
# wrld <- map_data('world') %>% filter(region != "Antarctica") %>% fortify()
# wrld_sf <- wrld %>%
#   split(f = .$group) %>%
#   lapply(
#     ., \(tb) {
#       tb %>% select(long, lat) %>% as.matrix() %>% list() %>% st_polygon()
#     }
#   ) %>%
#   st_sfc(crs = st_crs(maps$GLP))
# st_write(wrld_sf, here("data", "raw", "mappemonde.shp"))
wrld_sf <- st_read(here("data", "raw", "mappemonde.shp"))
# erosion de la mappemonde
wrld_sf_buffer <- wrld_sf %>%
# st_crop(st_bbox(occ_sf)) %>%
st_transform(crs = "EPSG:4087") %>%
st_union() %>%
st_buffer(-20000) %>%
st_transform(crs = "EPSG:4326")
# erosion de la mappemonde
wrld_sf_buffer <- wrld_sf %>%
# st_crop(st_bbox(occ_sf)) %>%
st_transform(crs = "EPSG:4087") %>%
st_buffer(-20000) %>%
st_transform(crs = "EPSG:4326")
ggplot() + geom_sf(data = wrld_sf_buffer)
wrld_sf_buffer <- wrld_sf %>%
st_union()
ggplot() + geom_sf(data = wrld_sf_buffer)
# erosion de la mappemonde
wrld_sf_buffer <- wrld_sf %>%
st_union() %>%
# st_crop(st_bbox(occ_sf)) %>%
st_transform(crs = "EPSG:4087") %>%
st_buffer(-20000) %>%
st_transform(crs = "EPSG:4326")
ggplot() + geom_sf(data = wrld_sf_buffer)
# erosion de la mappemonde
wrld_sf_buffer <- wrld_sf %>%
st_union() %>%
# st_crop(st_bbox(occ_sf)) %>%
st_transform(crs = "ESRI:54009") %>%
st_buffer(-20000) %>%
st_transform(crs = "EPSG:4326")
ggplot() + geom_sf(data = wrld_sf_buffer)
?st_wrap_dateline
p1 = st_point(c(7,52))
p2 = st_point(c(-30,20))
sfc = st_sfc(p1, p2, crs = 4326)
sfc
st_transform(sfc, 3857)
st_transform(st_sf(a=2:1, geom=sfc), "+init=epsg:3857")
try(st_transform(sfc, 3857, aoi = c(-280,-90,180,90)))
if (sf_extSoftVersion()["GDAL"] >= "3.0.0") {
st_transform(sfc, pipeline =
"+proj=pipeline +step +proj=axisswap +order=2,1") # reverse axes
st_transform(sfc, pipeline =
"+proj=pipeline +step +proj=axisswap +order=2,1", reverse = TRUE) # also reverse axes
}
nc = st_read(system.file("shape/nc.shp", package="sf"))
st_area(nc[1,]) # area from long/lat
st_area(st_transform(nc[1,], 32119)) # NC state plane, m
st_area(st_transform(nc[1,], 2264)) # NC state plane, US foot
library(units)
set_units(st_area(st_transform(nc[1,], 2264)), m^2)
st_transform(structure(p1, proj4string = "+init=epsg:4326"), "+init=epsg:3857")
st_wrap_dateline(st_sfc(st_linestring(rbind(c(-179,0),c(179,0))), crs = 4326))
sf_proj_info("datum")
# erosion de la mappemonde
wrld_sf_buffer <- wrld_sf %>%
st_union() %>%
# st_crop(st_bbox(occ_sf)) %>%
st_transform(crs = "EPSG:4087") %>%
st_buffer(-20000) %>%
st_transform(crs = "EPSG:4326")
ggplot() + geom_sf(data = wrld_sf_buffer)
wrld_sf %>%
st_transform(crs = "EPSG:4087") %>%
st_union()
# erosion de la mappemonde
wrld_sf_buffer <- wrld_sf %>%
st_union() %>%
# st_crop(st_bbox(occ_sf)) %>%
st_transform(crs = "EPSG:4087") %>%
st_buffer(-20000) %>%
st_transform(crs = "EPSG:4326")
ggplot() + geom_sf(data = wrld_sf_buffer)
st_crs(wrld_sf)
# erosion de la mappemonde
st_can_transform("EPSG:4326", "EPSG:4087")
# erosion de la mappemonde
wrld_sf_buffer <- wrld_sf %>%
st_union() %>%
# st_crop(st_bbox(occ_sf)) %>%
st_transform(crs = "EPSG:4087") %>%
st_wrap_dateline() %>%
st_buffer(-20000) %>%
st_transform(crs = "EPSG:4326")
# erosion de la mappemonde
wrld_sf_buffer <- wrld_sf %>%
st_union() %>%
# st_crop(st_bbox(occ_sf)) %>%
st_wrap_dateline() %>%
st_transform(crs = "EPSG:4087") %>%
st_buffer(-20000) %>%
st_transform(crs = "EPSG:4326")
ggplot() + geom_sf(data = wrld_sf_buffer)
source("~/Documents/mosceco/r_projects/MOSCECO_L2/data_occ_prep/scripts/boot.R", echo=TRUE)
# Vérification de la distribution pour une seule espèce ----
supfam <- "Muricoidea"
occ <- occ_sf_reduced[[supfam]][["Siratus_motacilla"]]
occ0 <- occ_sf[[supfam]][["Siratus_motacilla"]]
bb <- st_bbox(occ)
ggplot() +
geom_sf(data = wrld_sf %>% st_crop(bb)) +
geom_sf(data = occ, shape = "+", col = "blue") +
labs(
title = unique(occ$scientificName),
subtitle = paste0(
nrow(occ), " occurrences filtrées ",
"(", nrow(occ0), " occurrences initiales)"
)
)
# sélection de l'emprise pour l'Amérique latine
occs <- Reduce(append, occ_sf_reduced)
occs_ameriques <- sapply(
names(emprise),
\(n) {
sf <- emprise[[n]]
print(n)
if(nrow(sf) > 0) {
b <- c(-130, min(sf$decimalLatitude), -30, max(sf$decimalLatitude))
names(b) <- c("xmin", "ymin", "xmax", "ymax")
st_crop(sf, b)
}
},
USE.NAMES = T,
simplify = F
)
# Création du vecteur qui servira à sélectionner les zones pour lesquelles
# on veut une climatologie
am <- do.call(rbind, occs_ameriques)
ggplot() +
geom_sf(data = wrld_sf %>% st_crop(st_bbox(am))) +
geom_sf(data = am, shape = "+", col = "blue") +
geom_text(data = am %>% filter(occurrenceID == "MCZ:IZ:CRU-1931"), aes(x = decimalLongitude, y = decimalLatitude,
label = scientificName))
ggplot() + geom_sf(data = wrld_sf_buffer)
sf <- occ_sf[[supfam]][[75]]
n <- names(occ_sf[[supfam]][75])
# sf <- occ_sf[[supfam]][[75]]
# n <- names(occ_sf[[supfam]][75])
print(n)
# intersection avec les polygons érodés
sf$land <- st_intersects(sf, wrld_sf_buffer) %>% lengths()
p1 <- ggplot() +
geom_sf(data = wrld_sf_buffer) +
geom_sf(data = sf, aes(col = factor(land))) +
labs(title = paste("Intersection avec la terre :", n))
# filtre des occurrences sur terre
sf <- sf %>% filter(land == 0) %>% select(-land)
p2 <- ggplot() +
geom_sf(data = wrld_sf) +
geom_sf(data = sf) +
labs(title = paste("Occurrences marines :", n))
# au sein de quelle emprise se trouve le plus grand nombre
# d'occurrences ?
if(nrow(sf) > 0) {
# filtre des quantiles 0.05 et 0.95 ou 0.90 pour les coordonnées
# max
x1 <- sf$decimalLongitude %>% unique() %>%
quantile(0.9) %>% as.numeric()
x2 <- sf$decimalLongitude %>% unique() %>%
quantile(0.95) %>% as.numeric()
qtx <- if ((x2 - x1) > 50) {0.90} else {0.95}
y1 <- sf$decimalLatitude %>% unique() %>%
quantile(0.9) %>% as.numeric()
y2 <- sf$decimalLatitude %>% unique() %>%
quantile(0.95) %>% as.numeric()
qty <- if ((y2 - y1) > 50) {0.90} else {0.95}
bbox_qt005 <- st_bbox(
c(
xmin = sf$decimalLongitude %>% unique()
%>% quantile(0.05) %>% as.numeric(),
ymin = sf$decimalLatitude %>% unique() %>%
quantile(0.05) %>% as.numeric(),
xmax = sf$decimalLongitude %>% unique() %>%
quantile(qtx) %>% as.numeric(),
ymax = sf$decimalLatitude %>% unique() %>%
quantile(qty) %>% as.numeric()
)
)
offset <- 5
bbox_qt005e <- bbox_qt005 + c(rep(-offset, 2), rep(offset, 2))
sf_out <- sf %>% st_crop(bbox_qt005e)
p3 <- ggplot() +
geom_sf(data = wrld_sf %>% st_crop(st_bbox(sf_out))) +
geom_sf(data = sf_out) +
labs(title = paste("Occurrences filtrées (q95%) :", n))
if (show_p) print({x11(); (p1 / p2) | p3})
} else { sf_out <- sf }
print({x11(); (p1 / p2) | p3})
# intersection avec les polygons érodés
sf$land <- st_intersects(sf, wrld_sf_buffer) %>% lengths()
p1 <- ggplot() +
geom_sf(data = wrld_sf_buffer) +
geom_sf(data = sf, aes(col = factor(land))) +
labs(title = paste("Intersection avec la terre :", n))
# filtre des occurrences sur terre
sf <- sf %>% filter(land == 0) %>% select(-land)
p2 <- ggplot() +
geom_sf(data = wrld_sf) +
geom_sf(data = sf) +
labs(title = paste("Occurrences marines :", n))
# filtre des quantiles 0.05 et 0.95 ou 0.90 pour les coordonnées
# max
x1 <- sf$decimalLongitude %>% unique() %>%
quantile(0.9) %>% as.numeric()
x2 <- sf$decimalLongitude %>% unique() %>%
quantile(0.95) %>% as.numeric()
qtx <- if ((x2 - x1) > 50) {0.90} else {0.95}
y1 <- sf$decimalLatitude %>% unique() %>%
quantile(0.9) %>% as.numeric()
y2 <- sf$decimalLatitude %>% unique() %>%
quantile(0.95) %>% as.numeric()
qty <- if ((y2 - y1) > 50) {0.90} else {0.95}
bbox_qt005 <- st_bbox(
c(
xmin = sf$decimalLongitude %>% unique()
%>% quantile(0.05) %>% as.numeric(),
ymin = sf$decimalLatitude %>% unique() %>%
quantile(0.05) %>% as.numeric(),
xmax = sf$decimalLongitude %>% unique() %>%
quantile(qtx) %>% as.numeric(),
ymax = sf$decimalLatitude %>% unique() %>%
quantile(qty) %>% as.numeric()
)
)
offset <- 5
bbox_qt005e <- bbox_qt005 + c(rep(-offset, 2), rep(offset, 2))
sf_out <- sf %>% st_crop(bbox_qt005e)
p3 <- ggplot() +
geom_sf(data = wrld_sf %>% st_crop(st_bbox(sf_out))) +
geom_sf(data = sf_out) +
labs(title = paste("Occurrences filtrées (q95%) :", n))
if (show_p) print({x11(); (p1 / p2) | p3})
dev.off()
dev.off()
print({x11(); (p1 / p2) | p3})
sf
n
supfam
supfam <- "Majoidea"
sf <- occ_sf[[supfam]][[75]]
n <- names(occ_sf[[supfam]][75])
# sf <- occ_sf[[supfam]][[75]]
# n <- names(occ_sf[[supfam]][75])
print(n)
# intersection avec les polygons érodés
sf$land <- st_intersects(sf, wrld_sf_buffer) %>% lengths()
p1 <- ggplot() +
geom_sf(data = wrld_sf_buffer) +
geom_sf(data = sf, aes(col = factor(land))) +
labs(title = paste("Intersection avec la terre :", n))
# filtre des occurrences sur terre
sf <- sf %>% filter(land == 0) %>% select(-land)
p2 <- ggplot() +
geom_sf(data = wrld_sf) +
geom_sf(data = sf) +
labs(title = paste("Occurrences marines :", n))
# au sein de quelle emprise se trouve le plus grand nombre
# d'occurrences ?
if(nrow(sf) > 0) {
# filtre des quantiles 0.05 et 0.95 ou 0.90 pour les coordonnées
# max
x1 <- sf$decimalLongitude %>% unique() %>%
quantile(0.9) %>% as.numeric()
x2 <- sf$decimalLongitude %>% unique() %>%
quantile(0.95) %>% as.numeric()
qtx <- if ((x2 - x1) > 50) {0.90} else {0.95}
y1 <- sf$decimalLatitude %>% unique() %>%
quantile(0.9) %>% as.numeric()
y2 <- sf$decimalLatitude %>% unique() %>%
quantile(0.95) %>% as.numeric()
qty <- if ((y2 - y1) > 50) {0.90} else {0.95}
bbox_qt005 <- st_bbox(
c(
xmin = sf$decimalLongitude %>% unique()
%>% quantile(0.05) %>% as.numeric(),
ymin = sf$decimalLatitude %>% unique() %>%
quantile(0.05) %>% as.numeric(),
xmax = sf$decimalLongitude %>% unique() %>%
quantile(qtx) %>% as.numeric(),
ymax = sf$decimalLatitude %>% unique() %>%
quantile(qty) %>% as.numeric()
)
)
offset <- 5
bbox_qt005e <- bbox_qt005 + c(rep(-offset, 2), rep(offset, 2))
sf_out <- sf %>% st_crop(bbox_qt005e)
p3 <- ggplot() +
geom_sf(data = wrld_sf %>% st_crop(st_bbox(sf_out))) +
geom_sf(data = sf_out) +
labs(title = paste("Occurrences filtrées (q95%) :", n))
if (show_p) print({x11(); (p1 / p2) | p3})
} else { sf_out <- sf }
print({x11(); (p1 / p2) | p3})
source("~/Documents/mosceco/r_projects/MOSCECO_L2/data_occ_prep/scripts/boot.R", echo=TRUE)
# sélection de l'emprise pour l'Amérique latine
occs <- Reduce(append, occ_sf_reduced)
occs_ameriques <- sapply(
names(emprise),
\(n) {
sf <- emprise[[n]]
print(n)
if(nrow(sf) > 0) {
b <- c(-130, min(sf$decimalLatitude), -30, max(sf$decimalLatitude))
names(b) <- c("xmin", "ymin", "xmax", "ymax")
st_crop(sf, b)
}
},
USE.NAMES = T,
simplify = F
)
# Création du vecteur qui servira à sélectionner les zones pour lesquelles
# on veut une climatologie
am <- do.call(rbind, occs_ameriques)
ggplot() +
geom_sf(data = wrld_sf %>% st_crop(st_bbox(am))) +
geom_sf(data = am, shape = "+", col = "blue") +
geom_text(data = am %>% filter(occurrenceID == "MCZ:IZ:CRU-1931"), aes(x = decimalLongitude, y = decimalLatitude,
label = scientificName))
# sélection de l'emprise pour l'Amérique latine
occs <- Reduce(append, occ_sf_reduced)
occs_ameriques <- sapply(
names(occs),
\(n) {
sf <- occs[[n]]
print(n)
if(nrow(sf) > 0) {
b <- c(-130, min(sf$decimalLatitude), -30, max(sf$decimalLatitude))
names(b) <- c("xmin", "ymin", "xmax", "ymax")
st_crop(sf, b)
}
},
USE.NAMES = T,
simplify = F
)
# Création du vecteur qui servira à sélectionner les zones pour lesquelles
# on veut une climatologie
am <- do.call(rbind, occs_ameriques)
ggplot() +
geom_sf(data = wrld_sf %>% st_crop(st_bbox(am))) +
geom_sf(data = am, shape = "+", col = "blue") +
geom_text(data = am %>% filter(occurrenceID == "MCZ:IZ:CRU-1931"), aes(x = decimalLongitude, y = decimalLatitude,
label = scientificName))
ggplot() +
geom_sf(data = wrld_sf %>% st_crop(st_bbox(am))) +
geom_sf(data = occ_sf$Majoidea$Omalacantha_bicornuta,
shape = "+", col = "blue")
ggplot() +
geom_sf(data = wrld_sf %>% st_crop(st_bbox(am))) +
geom_sf(data = am, shape = "+", col = "blue") +
geom_text(
data = am,
aes(x = decimalLongitude, y = decimalLatitude, label = scientificName)
)
ggplot() +
geom_sf(data = wrld_sf %>% st_crop(st_bbox(am))) +
geom_sf(data = am, shape = "+", col = "blue")
source("~/Documents/mosceco/r_projects/MOSCECO_L2/data_occ_prep/scripts/formatage_gbif.R", echo=TRUE)
am_buffer <- am %>%
st_transform("EPSG:4087") %>%
st_buffer(1000) %>%
st_transform("EPSG:4326")
ggplot() +
geom_sf(data = wrld_sf %>% st_crop(st_bbox(am_buffer))) +
geom_sf(data = am_buffer, fill = "red", alpha = 0.5)
am_buffer <- am %>%
st_transform("EPSG:4087") %>%
st_buffer(100000) %>%
st_transform("EPSG:4326")
ggplot() +
geom_sf(data = wrld_sf %>% st_crop(st_bbox(am_buffer))) +
geom_sf(data = am_buffer, fill = "red", alpha = 0.5)
am_buffer <- am %>%
st_transform("EPSG:4087") %>%
st_buffer(10000) %>%
st_union() %>%
st_transform("EPSG:4326")
ggplot() +
geom_sf(data = wrld_sf %>% st_crop(st_bbox(am_buffer))) +
geom_sf(data = am_buffer, fill = "red", alpha = 0.5)
am_buffer <- am %>%
st_transform("EPSG:4087") %>%
st_buffer(50000) %>%
st_union() %>%
st_transform("EPSG:4326")
ggplot() +
geom_sf(data = wrld_sf %>% st_crop(st_bbox(am_buffer))) +
geom_sf(data = am_buffer, fill = "red", alpha = 0.5)
